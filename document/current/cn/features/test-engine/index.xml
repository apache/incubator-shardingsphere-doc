<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>测试引擎 on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/current/cn/features/test-engine/</link>
    <description>Recent content in 测试引擎 on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/current/cn/features/test-engine/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SQL测试用例</title>
      <link>https://shardingsphere.apache.org/document/current/cn/features/test-engine/sql-case/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/cn/features/test-engine/sql-case/</guid>
      <description>配置 设置好集成测试的相关环境以及初始化的数据之后，接下来开发者需要定义待测试的 SQL。 待测试的 SQL 存放在 /sharding-sql-test/src/main/resources/sql/sharding/SQL-TYPE/*.xml文件中。例如：
&amp;lt;sql-cases&amp;gt; &amp;lt;sql-case id=&amp;quot;update_without_parameters&amp;quot; value=&amp;quot;UPDATE t_order SET status = &#39;update&#39; WHERE order_id = 1000 AND user_id = 10&amp;quot; /&amp;gt; &amp;lt;sql-case id=&amp;quot;update_with_alias&amp;quot; value=&amp;quot;UPDATE t_order AS o SET o.status = ? WHERE o.order_id = ? AND o.user_id = ?&amp;quot; db-types=&amp;quot;MySQL,H2&amp;quot; /&amp;gt; &amp;lt;/sql-cases&amp;gt;  开发者通过该文件指定待断言的 SQL 以及该 SQL 所适配的数据库类型。将 sharding-sql-test 提取为单独的模块，以保证每个 SQL 用例可以在不同模块的测试引擎中共享。</description>
    </item>
    
    <item>
      <title>整合测试引擎</title>
      <link>https://shardingsphere.apache.org/document/current/cn/features/test-engine/integration-test-engine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/cn/features/test-engine/integration-test-engine/</guid>
      <description>配置 为了使测试更容易上手，集成测试引擎无需修改任何 Java 代码，只需要配置以下几类文件即可运行断言：
 环境类文件  /sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/env.properties /sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/env/SQL-TYPE/dataset.xml /sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/env/SQL-TYPE/schema.xml  测试用例类文件  /sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/SQL-TYPE/SQL-TYPE-integrate-test-cases.xml /sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/cases/SQL-TYPE/dataset/SHARDING-TYPE/*.xml  sql-case 文件  /sharding-sql-test/src/main/resources/sql/sharding/SQL-TYPE/*.xml   环境配置 集成测试需要真实的数据库环境，根据相应的配置文件创建测试环境：
首先，修改配置文件 /sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/env.properties ，例子如下：
# 测试主键，并发，column index等的开关 run.additional.cases=false # 分片策略，可指定多种策略 sharding.rule.type=db,tbl,dbtbl_with_masterslave,masterslave # 要测试的数据库，可以指定多种数据库(H2,MySQL,Oracle,SQLServer,PostgreSQL) databases=MySQL,PostgreSQL # MySQL配置 mysql.host=127.0.0.1 mysql.port=13306 mysql.username=root mysql.password=root ## PostgreSQL配置 postgresql.host=db.psql postgresql.port=5432 postgresql.username=postgres postgresql.password= ## SQLServer配置 sqlserver.host=db.mssql sqlserver.port=1433 sqlserver.username=sa sqlserver.password=Jdbc1234 ## Oracle配置 oracle.host=db.oracle oracle.port=1521 oracle.username=jdbc oracle.password=jdbc  其次，修改文件 /sharding-integration-test/sharding-jdbc-test/src/test/resources/integrate/env/SQL-TYPE/dataset.xml 在dataset.xml文件中定义元数据和测试数据。例如：
&amp;lt;dataset&amp;gt; &amp;lt;metadata data-nodes=&amp;quot;tbl.t_order_${0..9}&amp;quot;&amp;gt; &amp;lt;column name=&amp;quot;order_id&amp;quot; type=&amp;quot;numeric&amp;quot; /&amp;gt; &amp;lt;column name=&amp;quot;user_id&amp;quot; type=&amp;quot;numeric&amp;quot; /&amp;gt; &amp;lt;column name=&amp;quot;status&amp;quot; type=&amp;quot;varchar&amp;quot; /&amp;gt; &amp;lt;/metadata&amp;gt; &amp;lt;row data-node=&amp;quot;tbl.</description>
    </item>
    
    <item>
      <title>SQL解析测试引擎</title>
      <link>https://shardingsphere.apache.org/document/current/cn/features/test-engine/paese-test-engine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/cn/features/test-engine/paese-test-engine/</guid>
      <description>数据准备 SQL解析不需要真实的测试环境，开发者只需定义好待测试的SQL，以及解析后的断言数据即可：
SQL数据 在集成测试的部分提到过sql-case-id，其对应的SQL，可以在不同模块共享。开发者只需要在/sharding-sql-test/src/main/resources/sql/sharding/SQL-TYPE/*.xml 添加待测试的SQL即可。
断言解析数据 断言的解析数据保存在 /sharding-core/sharding-core-parse/sharding-core-parse-test/src/test/resources/sharding/SQL-TYPE/*.xml 在xml文件中，可以针对表名，token，SQL条件等进行断言，例如如下的配置：
&amp;lt;parser-result-sets&amp;gt; &amp;lt;parser-result sql-case-id=&amp;quot;insert_with_multiple_values&amp;quot;&amp;gt; &amp;lt;tables&amp;gt; &amp;lt;table name=&amp;quot;t_order&amp;quot; /&amp;gt; &amp;lt;/tables&amp;gt; &amp;lt;tokens&amp;gt; &amp;lt;table-token start-index=&amp;quot;12&amp;quot; table-name=&amp;quot;t_order&amp;quot; length=&amp;quot;7&amp;quot; /&amp;gt; &amp;lt;/tokens&amp;gt; &amp;lt;sharding-conditions&amp;gt; &amp;lt;and-condition&amp;gt; &amp;lt;condition column-name=&amp;quot;order_id&amp;quot; table-name=&amp;quot;t_order&amp;quot; operator=&amp;quot;EQUAL&amp;quot;&amp;gt; &amp;lt;value literal=&amp;quot;1&amp;quot; type=&amp;quot;int&amp;quot; /&amp;gt; &amp;lt;/condition&amp;gt; &amp;lt;condition column-name=&amp;quot;user_id&amp;quot; table-name=&amp;quot;t_order&amp;quot; operator=&amp;quot;EQUAL&amp;quot;&amp;gt; &amp;lt;value literal=&amp;quot;1&amp;quot; type=&amp;quot;int&amp;quot; /&amp;gt; &amp;lt;/condition&amp;gt; &amp;lt;/and-condition&amp;gt; &amp;lt;and-condition&amp;gt; &amp;lt;condition column-name=&amp;quot;order_id&amp;quot; table-name=&amp;quot;t_order&amp;quot; operator=&amp;quot;EQUAL&amp;quot;&amp;gt; &amp;lt;value literal=&amp;quot;2&amp;quot; type=&amp;quot;int&amp;quot; /&amp;gt; &amp;lt;/condition&amp;gt; &amp;lt;condition column-name=&amp;quot;user_id&amp;quot; table-name=&amp;quot;t_order&amp;quot; operator=&amp;quot;EQUAL&amp;quot;&amp;gt; &amp;lt;value literal=&amp;quot;2&amp;quot; type=&amp;quot;int&amp;quot; /&amp;gt; &amp;lt;/condition&amp;gt; &amp;lt;/and-condition&amp;gt; &amp;lt;/sharding-conditions&amp;gt; &amp;lt;/parser-result&amp;gt; &amp;lt;/parser-result-sets&amp;gt;  设置好上面两类数据，开发者就可以通过 sharding-core-parse-test 下对应的engine启动SQL解析的测试了。</description>
    </item>
    
    <item>
      <title>SQL改写测试引擎</title>
      <link>https://shardingsphere.apache.org/document/current/cn/features/test-engine/rewrite-test-engine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/cn/features/test-engine/rewrite-test-engine/</guid>
      <description>待完成</description>
    </item>
    
  </channel>
</rss>