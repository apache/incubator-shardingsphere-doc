<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开发者手册 on ElasticJob</title>
    <link>https://shardingsphere.apache.org/elasticjob/current/cn/dev-manual/</link>
    <description>Recent content in 开发者手册 on ElasticJob</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/elasticjob/current/cn/dev-manual/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>作业分片策略</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/dev-manual/sharding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/dev-manual/sharding/</guid>
      <description>作业分片策略，用于将作业在分布式环境下分解成为任务使用。
   SPI 名称 详细说明     JobShardingStrategy 作业分片策略       已知实现类 详细说明     AverageAllocationJobShardingStrategy 根据分片项平均分片   OdevitySortByNameJobShardingStrategy 根据作业名称哈希值的奇偶数决定按照作业服务器 IP 升序或是降序的方式分片   RotateServerByNameJobShardingStrategy 根据作业名称轮询分片    </description>
    </item>
    
    <item>
      <title>线程池策略</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/dev-manual/thread-pool/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/dev-manual/thread-pool/</guid>
      <description>线程池策略，用于执行作业的线程池创建。
   SPI 名称 详细说明     JobExecutorServiceHandler 作业执行线程池策略       已知实现类 详细说明     CPUUsageJobExecutorServiceHandler 根据 CPU 核数 * 2 创建作业处理线程池   SingleThreadJobExecutorServiceHandler 使用单线程处理作业    </description>
    </item>
    
    <item>
      <title>错误处理策略</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/dev-manual/error-handler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/dev-manual/error-handler/</guid>
      <description>错误处理策略，用于作业失败时的处理策略。
   SPI 名称 详细说明     JobErrorHandler 作业执行线程池策略       已知实现类 详细说明     LogJobErrorHandler 记录作业异常日志，但不中断作业执行   ThrowJobErrorHandler 抛出系统异常并中断作业执行   IgnoreJobErrorHandler 忽略系统异常且不中断作业执行    </description>
    </item>
    
    <item>
      <title>作业类名称提供策略</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/dev-manual/job-class-provider/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/dev-manual/job-class-provider/</guid>
      <description>作业类名称提供策略，用于在不同的容器环境下提供准确的作业类名称。
   SPI 名称 详细说明     JobClassNameProvider 作业类名称提供策略       已知实现类 详细说明     SimpleJobClassNameProvider 标准环境下的作业类名称提供策略   SpringProxyJobClassNameProvider Spring 容器环境下的作业类名称提供策略    </description>
    </item>
    
    <item>
      <title>线路规划</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/cn/dev-manual/roadmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/cn/dev-manual/roadmap/</guid>
      <description>Kernel  Unified Job Config API  Core Config Type Config Root Config   Job Types  Simple Dataflow Script Http   Event Trace  Event Publisher Database Event Listener Other Event Listener   Unified Schedule API Unified Resource API  ElasticJob-Lite  Distributed Features  High Availability Elastic scale in/out Failover Misfire Idempotency Reconcile   Registry Center  ZooKeeper Other Registry Center Supported   Lifecycle Management  Add/Remove Pause/Resume Disable/Enable Shutdown Restful API Web Console   Job Dependency  Listener DAG   Spring Integrate  Namespace Bean Injection Spring Boot Starter    ElasticJob-Cloud  Transient Job  High Availability Elastic scale in/out Failover Misfire Idempotency   Daemon Job  High Availability Elastic scale in/out Failover Misfire Idempotency   Mesos Scheduler  High Availability Reconcile Redis Based Queue Improvement Http Driver   Mesos Executor  Executor Reuse Pool Progress Reporting Health Detection Log Redirect   Lifecycle Management  Job Add/Remove Job Pause/Resume Job Disable/Enable Job Shutdown App Add/Remove App Disable/Enable Restful API Web Console   Job Dependency  Listener Workflow DAG   Job Distribution  Mesos Based Distribution Docker Based Distribution   Resources Management  Resources Allocate Cross Data Center A/B Test   Spring Integrate  Bean Injection    </description>
    </item>
    
  </channel>
</rss>